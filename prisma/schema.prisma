// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHERS
}

enum BloodGroup {
  A_POSITIVE
  B_POSITIVE
  A_NEGATIVE
  B_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
}

enum Role {
  PATIENT
  ADMIN
  SUPER_ADMIN
  PSYCHOLOGIST
  DOCTOR
}

enum Department {
  PATIENT_DEPARTMENT
  PSYCHOLOGIST_DEPARTMENT
  DOCTOR_DEPARTMENT
}

enum DayOff {
  SATURDAY
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum BookingStatus {
  ACTIVE
  PENDING
  CANCELED
}

enum DoctorArea {
  CARDIOLOGISTS
  OBS_AND_GYNAE
  MEDICINE
  ENT
  DERMATOLOGY_AND_SKIN
  EYE
  ORAL_AND_DENTAL
  HAEMATOLOGIST
  CANCER
  NEUROLOGY
  CHEST
  PSYCHIATRIST
  UROLOGIST
  PGYSIOTHERAPY
  CHILD
  NUTRITIONIST
  ORTHOPEDIC
  SURGERY
  ENDOCRINOLOGY
  NEPHROLOGY
  SPINE_AND_NEUROSURGERY
}

model Patient {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password      String
  phone_number  String    @unique
  profile_image String
  gender        Gender
  blood_group   BloodGroup
  role          Role      @default(PATIENT)

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

model Admin {
  id         String  @id @default(uuid())
  name       String
  email      String  @unique
  password   String
  phone_number String @unique
  profile_image String
  gender     Gender
  blood_group BloodGroup
  role       Role
  department  Department?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Specialist {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String
  phone_number  String   @unique
  profile_image String
  gender        Gender
  blood_group   BloodGroup
  role          Role     @default(PSYCHOLOGIST)
  specialization DoctorArea  @default(MEDICINE)
  fees          Int @default(500)
  startTime     String
  endTime       String
  slots         String[]
  degrees       String[]
  dayOff        DayOff   @default(FRIDAY)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  bookings      Booking[]
}

model Booking{
  id            String @id @default(uuid())
  date          DateTime
  slot          String
  status        BookingStatus @default(PENDING)
  is_payment_completed Boolean @default(false)

  patient      Patient @relation(fields: [patientId], references: [id])
  patientId    String

  specialist    Specialist @relation(fields: [specialistId], references: [id])
  specialistId String

  createdAt     DateTime @default(now()) 
  updatedAt     DateTime @updatedAt
}

